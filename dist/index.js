"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
    return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = void 0;
var prettier_1 = require("prettier");
var generate_fragments_1 = require("./generate-fragments");
var generate_mutations_1 = require("./generate-mutations");
var generate_queries_1 = require("./generate-queries");
var generate_subscriptions_1 = require("./generate-subscriptions");
var defaultFragmentExcludeSuffixes = [
    "_aggregate",
    "_aggregate_fields",
    "_avg_fields",
    "_max_fields",
    "_min_fields",
    "_stddev_fields",
    "_stddev_pop_fields",
    "_stddev_samp_fields",
    "_sum_fields",
    "_var_pop_fields",
    "_var_samp_fields",
    "_variance_fields",
];
var defaultMutationExcludeArgKeys = ["onConflict"];
function check(generatorKind, against) {
    if (Array.isArray(generatorKind)) {
        return (generatorKind.includes(against) || generatorKind.includes("all_documents"));
    }
    return generatorKind === against || generatorKind === "all_documents";
}
var plugin = function (schema, documents, config) { return __awaiter(void 0, void 0, void 0, function () {
    var kind, excludeSuffixes, excludeArgKeys, graphqlOutput;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                kind = config.kind;
                excludeSuffixes = config.excludeSuffixes
                    ? config.excludeSuffixes
                    : defaultFragmentExcludeSuffixes;
                excludeArgKeys = config.excludeArgKeys
                    ? config.excludeArgKeys
                    : defaultMutationExcludeArgKeys;
                graphqlOutput = "# THIS FILE HAS BEEN AUTO-GENERATED\n# DO NOT EDIT THIS FILE DIRECTLY\n\n";
                if (check(kind, "fragments")) {
                    graphqlOutput += (0, generate_fragments_1.generateFragments)(schema, __assign(__assign({}, config), { excludeSuffixes: excludeSuffixes }));
                }
                if (check(kind, "queries")) {
                    graphqlOutput += (0, generate_queries_1.generateQueries)(schema, __assign(__assign({}, config), { excludeSuffixes: excludeSuffixes }));
                }
                if (check(kind, "subscriptions")) {
                    try {
                        graphqlOutput += (0, generate_subscriptions_1.generateSubscriptions)(schema, config);
                    }
                    catch (error) {
                        // no subscriptions
                    }
                }
                if (check(kind, "mutations")) {
                    try {
                        graphqlOutput += (0, generate_mutations_1.generateMutations)(schema, __assign(__assign({}, config), { excludeSuffixes: excludeSuffixes, excludeArgKeys: excludeArgKeys }));
                    }
                    catch (error) {
                        // no mutations
                    }
                }
                return [4 /*yield*/, (0, prettier_1.format)(graphqlOutput, { parser: "graphql" })];
            case 1:
                graphqlOutput = _a.sent();
                return [2 /*return*/, graphqlOutput];
        }
    });
}); };
exports.plugin = plugin;
